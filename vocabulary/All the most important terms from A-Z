# All the most important terms from A-Z

1. Agile 
A is for agile, a major buzzword across the entire tech 
industry right now.
 Agile web development essentially refers to a particular 
 way of working, and 
 you’ll often hear this term in the startup world. In an 
 agile team, web 
 developers will work according to weekly or biweekly 
 sprints. A sprint 
 usually consists of five phases: design, develop, test, 
 deploy and review.
2. Algorithm
An algorithm is basically a set of steps for carrying out 
certain tasks. In
computer programming, algorithms are a key part of 
problem-solving. When 
creating an algorithm, developers will document all the 
necessary steps it 
took to arrive at a solution to a problem, and what each step involved.
3. API
API stands for Application Programming Interface. An API 
enables two 
different programs to communicate with each other by making 
some parts of the 
website code available to developers. Developers can use 
this code, i.e. the 
API, to build tools and widgets that can be connected to 
that particular 
website. A classic example is the Facebook API, which 
enables apps like 
Facebook Messenger and Words with Friends.
4. Application
You’re no doubt familiar with apps, and probably use several 
on a daily 
basis. An application is basically a type of software that 
enables the user 
to perform different tasks—whether it’s setting an alarm on 
your smartphone 
or typing a document in Microsoft Word. As a developer, you 
need to be 
familiar with the difference between desktop apps, mobile 
apps and web apps.
 See also: Web app.

5. Adaptive design
The way in which a website is built determines how it 
appears on different
 devices. Adaptive design creates a website in several 
 different layouts, 
 each suited for different screen sizes. Depending on what 
 device is being 
 used to access the website, the website will adapt and 
 deliver the 
 appropriate layout. See also: responsive design and 
 mobile-first.
6. Bootstrap
Bootstrap is a free, open-source frontend framework for 
designing websites
 and web apps. It was developed by Mark Otto and Jacob 
 Thornton at Twitter in
  order to encourage consistency across internal tools. 
  Bootstrap includes
  HTML and CSS-based design templates for typography, forms, 
  buttons, tables,
  navigation, modals and more, plus JavaScript plugins. 
  Check out this 
  beginner’s guide to Bootstrap to get you started. See 
  also: frameworks and 
  frontend.
7. Backend
Backend development essentially refers to everything that 
goes on behind the 
scenes. What happens at the backend—or server-side—powers 
what happens at the 
frontend, i.e. what the user sees and interacts with. 
Backend development can 
be broken down into four main components of a software 
stack: the server, the 
database, the operating system, and the software. You can 
learn more about 
the difference between frontend and backend elsewhere on the 
blog .
8. Browser
A web browser is the software used to access the internet 
and display web 
pages. When you type a web address or URL into the browser, 
you are 
effectively sending out a series of requests. The browser 
will gather all the 
different elements that make up that particular webpage, 
such as images, ads 
and content, from wherever they are
storedi e different 
directories or servers in order to display the page that you 
see. The most 
common browsers 
include Microsoft Internet Explorer, Google Chrome, Mozilla 
Firefox, Safari 
for Apple, and Opera.
9. Bug
If you want to work as a web developer, this is one word 
you’ll definitely 
need in your vocabulary! Put simply, a bug is an error that 
prevents a 
website or app from running as it should. In the world of 
web development, 
you’ll often deal with bug reports and be tasked with fixing 
said bugs.
10. Cache
A cache is a temporary storage space for data. When you 
visit a website, the 
files that you request are automatically stored in the 
cache. If you return 
to that same website in the near future, your browser will 
retrieve the 
necessary files from your cache rather than from the 
original server—so the 
webpage will load quicker.
11. Code
Of course, you can’t call yourself a web developer until you 
know what code 
is! Code is essentially what web developers write using 
programming languages 
(scroll down to languages in this glossary!). To see exactly 
what code looks 
like, right-click on your internet browser window and click 
“view page source”
. You’ll then be able to see the code that’s behind this 
particular website.
12. CSS
CSS stands for Cascading Style Sheets. It is a markup 
language responsible 
for the visual elements of a website. HTML (another markup 
language) is used 
to determine the structure and content of the webpage. Web 
developers will 
then use CSS to style this content; in other words, CSS 
tells the browser how 
the HTML elements should be displayed. CSS is used to apply 
colors and to 
determine font, text size and alignment, to name just a few. 
Interested in 
learning more about it? We’ve got a detailed guide to CSS.
13. Data structures
A crucial aspect of development and programming, data 
structures are a way of 
organizing and storing data for maximum efficiency much like 
books in a 
library. Data structures make it easy to find, access, sort, 
insert and 
delete data. There are many different types of data 
structures, including 
linked lists, stacks, queues and sets.
14. Debugging
Remember those bugs we talked about? Well, debugging is the 
process of 
identifying and dealing with them. Debugging is a multistep 
process: the 
developer locates the problem, isolates the source and then 
either gets to 
work fixing it or comes up with a workaround. The debugging 
process ends with 
testing and, if necessary, further fixes.
15. Deployment
Deployment is a key step in the web development process.
 Once a website or an 
app has been developed and tested, it’s ready to go live; in
 other words, 
it’s ready to be deployed. There are several different 
stages to deploying a 
website, with the last being hosting it. These days, you can
 host a website 
on the internet for free—all you need is an email address!
16. Documentation
A crucial part of software engineering, documentation is 
essentially the 
central point of reference for anyone involved in managing,
 maintaining or 
using a website or piece of software. Documentation may 
provide information 
on requirements, architecture and design, technical 
properties, information 
for the end user, or marketing.
17. Domain name
A website’s domain name is essentially its address on the
 world wide web. 
It’s the address that users type into the browser in order 
to view a 
website—such as “CareerFoundry.com”. Every website can be 
identified by its 
IP address (a series of numbers), and the domain name is 
just a more 
user-friendly label for these numbers. Domains are split 
into two levels: in 
the case of CareerFoundry’s website, the “CareerFoundry” 
part is the 
top-level domain, while the “.com” part is the second level 
domain.
18. Frameworks
Frameworks were invented to make the process of building a 
website faster and 
easier. You can think of a framework as a collection of 
solutions, tools and 
components that you can access in one central 
location—rather than seeking 
them all out separately each time. Some common frameworks 
include Ruby on 
Rails, Bootstrap, AngularJS and Joomla.
19. Frontend
Remember how the backend is everything that goes on behind 
the scenes, and 
powers what goes on at the frontend? The frontend of a 
website, also known as 
client-side, is what the end user sees and interacts with.
Frontend languages 
include HTML, CSS and JavaScript, which all have a hand in 
determining the 
visual output of a website.
20. Full-stack
We’ve already covered both the frontend and the backend: now 
it’s time to 
throw full-stack development into the mix. Full-stack 
developers work across 
all three layers: the frontend, the backend, and the 
database layer. Because 
of the sheer depth of their knowledge across the entire tech 
stack, this kind 
of developer tends to have years of industry experience and 
gets paid well 
for it, as our full-stack salary guide shows.
21. Git
An absolute staple in the web development world, Git is a 
version control 
system where developers can store and manage their code. As 
a web developer, 
you’ll make constant changes to your code whenever you’re in 
the process of 
creating something, be it an app or a website. Git enables 
you to track these 
changes and reverse them if necessary, and also to work 
together with other 
teams and manage multiple projects at once.
22. GitHub
GitHub is a cloud interface for Git. It has been around 
since 2008 and now 
has over 28 million users worldwide, making it the largest 
host of source 
code in the world! GitHub offers all the version control 
functionality of 
Git, but also offers its own features, such as bug tracking, 
task management 
and project wikis. Discover why GitHub is so important for 
web developers.
23. HTML
HTML stands for Hypertext Markup Language. Simply put, it’s 
a computer 
language used to create websites. HTML describes how a 
document  should be 
displayed by an internet browser as a webpage. It consists 
of tags, elements 
and attributes and, once you’ve got the hang of it, is 
pretty simple to work 
with! This beginner’s guide to HTML will tell you more.
24. HTTP
Yet another acronym to get your head around: HTTP stands for 
Hypertext 
Transfer Protocol, and is used to transfer data across the 
internet. HTTP 
sends the data (say, a HTML document or an image) from an 
HTTP server program 
(a web server) to an HTTP client program (a web browser).
25. Information Architecture
Information architecture is the practice of organizing 
complex information in 
a clear and logical way. In terms of websites and apps, this 
means creating a 
user-friendly structure that makes it easy for the user to 
find their way 
around. IA is not just for designers; developers are 
information architects, 
too, in the way they structure their code. Generally 
speaking, site maps, 
hierarchies, categorizations, navigation and metadata are 
all part of IA.
26. Java
Java is one of the most popular programming languages out 
there. One of the 
main reasons it is so popular is that it is 
platform-independent, meaning 
that programs built using Java can be run on any device, 
regardless of what 
operating system is being used. Java has been around since 
1995, and is a 
concurrent, class-based and object-oriented language. Learn 
more about Java 
in this beginner’s guide to the 10 most popular programming 
languages.
27. JavaScript
While we’re on the subject of popular programming languages, 
let’s talk about 
JavaScript. JavaScript is primarily used as a client-side 
language, meaning 
that it is embedded into the HTML of a page and sent to the 
browser. Web 
developers use JavaScript to add automation, animations and 
interactivity to 
web pages.
28. jQuery
Remember JavaScript? Well jQuery is a JavaScript library 
we’ll go into 
libraries further down the glossary). jQuery basically 
simplifies the task of 
using JavaScript on your website by condensing several lines 
of JavaScript 
code into a single line. Rather than adding many lines of 
JavaScript code, 
the developer can simply take the “compact version” from the 
jQuery library.
29. Languages
L is for languages, and web development is full of them!
We’ve already 
mentioned a few languages in this glossary (remember CSS, 
HTML and Java?), 
but what exactly is a language in this context? Languages 
are basically what 
programmers use to build websites, apps and software. There 
are programming 
languages, markup languages, style sheet languages and 
database management 
languages—check out this list of all the different languages.
30. Libraries
As we saw with the example of JavaScript (the programming 
language) and 
jQuery (a JavaScript library), libraries can save developers 
considerable 
time and effort. Libraries are stores of pre-written code, 
or modules, that 
programmers can take and insert into the code they’re writing.
31. Minification
Minification is one of my favorite web development 
buzzwords—it’s the process 
of minimizing code and markup in order to reduce the file 
size. When creating 
a HTML file, for example, developers will most likely use 
spacing, comments 
and variables to make the code more readable as they work 
with it. To minify 
the code once the webpage is ready to go live, developers 
will remove these 
comments and spaces to ensure a quicker page-load time 
(crucial for 
delivering a good user experience!)
32. Mobile-first
Mobile-first is an approach to web design and development 
that prioritizes 
mobile devices. Rather than building a website with desktop 
in mind and then 
considering how it might look on a mobile device, with a 
mobile-first 
approach, the website is first built for the small screen. 
Mobile-first means 
adopting either responsive or adaptive design (both are 
included in this 
glossary!).
33. MVP
It’s crucial not to get your sports buzzwords and your web 
development 
buzzwords mixed up. Programmers might often hear talk of 
“MVP”—or minimum 
viable product. The minimum viable product is the most 
pared-down version of 
a product that can be released to market. When adopting an 
MVP approach, 
developers will first focus on the core features and 
functions that are 
absolutely crucial. Then, once the product has been released 
and user 
feedback has been gathered, they will continue to build the 
complete set of 
features.
34. MySQL
MySQL is the world’s most popular open-source database 
management system. If 
you’re brand new to web development, this might not mean 
much to you just 
yet, so let me explain. A database is a structured 
collection of data, and an 
essential component of most websites. A database management 
system is a type 
of software that manages these databases. What does that 
have to do with your 
website code? Find out here.
35. Operating system
An operating system, or OS, is a type of software that 
enables the user to 
run applications on a device. Say you have a Samsung Galaxy 
smartphone; the 
operating system in this case is Android. Any apps that have 
been built for 
the Android OS can run on your Samsung. The iPhone, on the 
other hand, uses 
the iOS operating system and can only run apps that have 
been built with this 
in mind.
36. PHP
PHP stands for Hypertext Preprocessor, a server-side 
scripting language. 
Among other things, PHP can be used to generate dynamic page 
content, to send 
and receive cookies, to control user access and to encrypt 
data. Why PHP? 
Well, it’s compatible with almost all servers used today, 
it’s fairly easy to 
learn, supports a wide range of databases, and it’s free to 
download!
37. Plugin
A plugin is basically an extension that adds extra 
functionality to an 
existing software, such as plugins for your browser or 
add-ons for the 
WordPress CMS. Why would you build an app to support 
plugins? First of all, 
it’s an easy way to add new features as it enables 
third-party developers to 
build upon the existing app, and secondly, it can help to 
reduce the size of 
an app.
38. Python
Another programming language, Python was named after Monty 
Python—true story! 
Python is widely adopted and supported; Google, Reddit, Nasa 
and Dropbox are 
among some of the most well-known companies using it. Python 
is especially 
useful for data science, machine learning, automation and 
API development. At 
the same time, it’s known for its readability and is 
therefore fairly easy 
for beginners to learn and use.
39. Resolution
Resolution is a metric used to describe the size and quality 
of an image. It 
also refers to the display capabilities of a computer or 
mobile device—i.e. 
how many pixels a screen is able to display both 
horizontally and vertically. 
In a web development context, it’s important to think about 
how different 
images will render on different screen sizes.
40. Responsive design
Responsive design ensures that a website is displayed 
correctly no matter 
what device the user is viewing it on. Responsive websites 
are built in such 
a way that they adapt to different screen sizes, so the user 
gets the same 
quality and ease-of-use regardless of whether they’re 
browsing on desktop, 
mobile, or tablet. You can learn the differences between 
responsive and 
adaptive web design.
41. Ruby and Ruby on Rails
Ruby is another programming language—a dynamic, open-source 
programming 
language with a focus on simplicity and productivity, in 
fact. Ruby on Rails 
is a framework (remember frameworks?) that is built in Ruby. 
In the web 
development world, you might hear Ruby on Rails referred to 
simply as “Rails”
. A question many beginner web developers ask is “Is it 
worth learning Ruby 
on Rails?”.
42. Sitemap
A sitemap is an outline of all the pages on a website. There 
are three 
different types of sitemaps: those used by web designers 
when planning a 
website, hierarchical listings intended for the human user, 
and structured 
listings intended for search engines. Web developers use XML 
sitemaps to 
publish lists of links across their websites, in line with 
Google’s Sitemaps 
Protocol.
43. Software stack
Software stacks make up the backend of a website, and they a
re essentially 
bundles of software that work together. In the case of a 
smartphone, for 
example, the software stack would be made up of the 
operating system, the 
phone app, the web browser and other basic applications.
44. SSL
SSL stands for Secure Sockets Layer. It’s a standard
security protocol for 
ensuring that all data transmitted between the web server 
and the browser 
remains encrypted—and therefore unreadable to the naked eye. 
You can tell if 
a website has an SSL certificate by looking at the web 
address: if the URL 
starts with “https”, the website is secure. You’ll also see 
a padlock symbol 
in the browser bar.
45. Text editor
One of the key tools you’ll use in web development is a text 
editor. A text 
editor is just a type of software used to write plain, 
unformatted text. 
You’ll use a text editor such as SublimeText, TextEdit or 
TextWrangler to 
write your initial code. Then, later on, it will be 
formatted to make it 
computer-readable.
46. UI Design
UI design stands for user interface design, and it’s all 
about the screens 
and interactive touchpoints that make up a website or an 
app. Swiping 
motions, scrollbars and clickable buttons are all part of UI 
design—essentially anything that makes up the user 
interface. There are many 
different parts to what a UI designer exactly does.
47. UX Design
As a web developer, you’ll also work closely with UX 
designers, so it helps 
to understand what they do. UX design stands for user 
experience design, and 
it’s all about providing a smooth, user-friendly experience 
for the end user 
as they navigate around a website or an app. You can learn 
more about UX 
design elsewhere on the blog.
48. Version control
Version control is all about recording and managing the 
changes you make 
along the way—be it changes to the code you’re writing, to a 
website, a 
computer program or a document. As already mentioned, Git is 
one of the most 
popular version control systems used by developers because 
it allows them to 
track and reverse any changes to their code.
49. Web app
It’s important to distinguish between mobile apps and web 
apps, as they are 
built differently. Native mobile apps are built for a 
specific platform, such 
as iOS for iPhone, and are installed and run on the device 
itself. Web apps, 
on the other hand, are accessed via the internet browser and 
will adapt to 
whichever device you’re viewing them. They’re not native to 
a specific 
system, nor do they need to be downloaded or installed.
50. Wireframe
Wireframes help designers to communicate to web developers 
how a website 
should be structured. A wireframe is essentially a 
bare-bones blueprint of 
the website, showing the page layout, how the content should 
be arranged, 
which interface elements and navigational systems should be 
included, and how 
all these components work together.